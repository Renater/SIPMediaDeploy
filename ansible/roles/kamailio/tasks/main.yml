---
- name: Install gnupg2
  become: true
  ansible.builtin.apt:
    name: gnupg2
    update_cache: true

- name: Add Kamailio GPG apt Key
  become: true
  ansible.builtin.apt_key:
    url: http://deb.kamailio.org/kamailiodebkey.gpg
    state: present

- name: Add Kamailio Repository
  become: true
  ansible.builtin.apt_repository:
    repo: "deb http://deb.kamailio.org/kamailio{{ kamailio_major_version }}{{ kamailio_minor_version }} {{ ansible_distribution_release }} main"
    state: present

- name: Install packages
  become: true
  ansible.builtin.apt:
    name:
      - kamailio
      - kamailio-tls-modules
      - kamailio-websocket-modules
      - kamailio-python3-modules
      - kamailio-sqlite-modules
      - python3-pip
    update_cache: true

- name: Install pexpect
  become: true
  ansible.builtin.pip:
    name: pexpect

- name: Copy Gateway Python script
  become: true
  ansible.builtin.copy:
    src: request_gw.py
    dest: /etc/kamailio/request_gw.py
    mode: "640"
    owner: kamailio
    group: kamailio
  notify: Restart Kamailio

- name: Copy configuration templates
  become: true
  ansible.builtin.template:
    src: "{{ kamailio_file }}.j2"
    dest: "/etc/kamailio/{{ kamailio_file }}"
    mode: "640"
    owner: kamailio
    group: kamailio
  notify: Restart Kamailio
  loop:
    - kamailio.cfg
    - kamctlrc
    - sipmediagw.cfg
  loop_control:
    loop_var: kamailio_file

- name: Configure TLS if enabled
  ansible.builtin.include_tasks: tls.yml
  when: enable_tls

- name: Create /usr/local/etc/kamailio directory
  become: true
  ansible.builtin.file:
    path: /usr/local/etc/kamailio
    state: directory
    mode: "750"
    owner: kamailio
    group: kamailio
  notify: Restart Kamailio

- name: Check if database already exists
  become: true
  ansible.builtin.stat:
    path: /usr/local/etc/kamailio/kamailio.sqlite
  register: database_file

- name: Create Kamailio database if not exists
  ansible.builtin.expect:
    command: sudo -u kamailio /usr/sbin/kamdbctl create
    responses:
      (?i)Install: y
  notify: Restart Kamailio
  when: not database_file.stat.exists

- name: Check if column locked in table location already exists
  become: true
  ansible.builtin.command: >-
    sudo -u kamailio sqlite3 /usr/local/etc/kamailio/kamailio.sqlite
    "SELECT COUNT(*) FROM pragma_table_info('location') WHERE name='locked'"
  register: result
  changed_when: false

- name: Alter Kamailio database if not altered
  ansible.builtin.command: sudo -u kamailio sqlite3 /usr/local/etc/kamailio/kamailio.sqlite "ALTER TABLE location ADD COLUMN locked INTEGER NOT NULL DEFAULT 0"
  notify: Restart Kamailio
  when: result.stdout == "0"
